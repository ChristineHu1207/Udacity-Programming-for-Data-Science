1
00:00:00,000 --> 00:00:04,567
أكثر الأمثلة عملية
على دالة النافذة هو المجموع التراكمي.

2
00:00:04,667 --> 00:00:07,200
مثلاً، لنقل أنك تريد احتساب

3
00:00:07,300 --> 00:00:10,233
مجموع تراكمي لكمية الورق العادي

4
00:00:10,333 --> 00:00:13,400
الذي باعته Parch and Posey حتى تاريخه.

5
00:00:35,767 --> 00:00:40,367
نلاحظ أن هذا الاستعلام يخلق تجميعاً،

6
00:00:40,467 --> 00:00:43,933
وهو المجموع التراكمي،
من دون استخدام GROUP BY.

7
00:00:44,033 --> 00:00:47,333
لنقسّم بناء الجملة إلى أجزاء
ونتعرف على طريقة عملها.

8
00:00:47,433 --> 00:00:52,300
يشبه أول جزء من هذا التجميع
أي عملية تجميع أخرى إلى حد كبير.

9
00:00:52,400 --> 00:00:55,567
إضافة OVER تجعله أنها دالة نافذة.

10
00:00:55,667 --> 00:00:58,000
يمكنك قراءة التجميع أعلاه كالتالي:

11
00:00:58,100 --> 00:01:00,600
احسب مجموع الورق standard_qty

12
00:01:00,700 --> 00:01:04,867
بجمع جميع الصفوف وصولاً إلى صف معيّن،

13
00:01:04,967 --> 00:01:08,200
بالترتيب وفقاً لقيم العمود occurred_at.

14
00:01:08,300 --> 00:01:10,133
لنفترض بدلاً من ذلك

15
00:01:10,233 --> 00:01:14,367
أننا نريد إعادة احتساب المجموع التراكمي
مع بداية كل شهر.

16
00:01:14,467 --> 00:01:19,433
لتضييق النافذة من مجموعة البيانات الكاملة
إلى مجموعات فردية ضمن مجموعة البيانات،

17
00:01:19,533 --> 00:01:35,267
نستخدم دالة PARTITION BY.

18
00:01:35,367 --> 00:01:41,933
الآن أصبح هذا الاستعلام
يجمّع نتائج الاستعلام ويرتّبها

19
00:01:42,033 --> 00:01:44,467
حسب الشهر الذي حصلت فيه الحركة.

20
00:01:44,567 --> 00:01:48,567
وضمن كل شهر
يتم ترتيبها حسب occurred_at.

21
00:01:48,667 --> 00:01:50,100
والمجموع التراكمي

22
00:01:50,200 --> 00:01:55,633
يجمع الصفّ الحالي
وكافة الصفوف السابقة لـ standard_qty.

23
00:01:55,733 --> 00:01:59,567
هذا ما يحدث عندما تقوم بضم الصفوف
باستخدام PARTITION BY.

24
00:01:59,667 --> 00:02:03,100
في حال ما زلت
تجد صعوبة في فهم عمل ORDER BY هنا،

25
00:02:03,200 --> 00:02:08,900
فهي ببساطة ترتب الأعمدة المحددة بنفس
الطريقة التي ترتبها بها ORDER BY،

26
00:02:09,000 --> 00:02:13,133
باستثناء أنها تعامل
كل قسم على أنه منفصل عن البقي.

27
00:02:13,233 --> 00:02:15,000
كما أنها تُنتج المجموع التراكمي أيضاً.

28
00:02:15,100 --> 00:02:18,133
من دون ORDER BY، ستكون كل قيمة

29
00:02:18,233 --> 00:02:23,067
مجرد مجموع جميع قيم standard_qty
في الشهر الذي ترتبط به.

30
00:02:23,167 --> 00:02:25,100
لتوضيح الصورة أكثر،

31
00:02:25,200 --> 00:02:30,100
هذا ما يحصل عندما
ننفذ هذا الاستعلام من دون ORDER BY.

32
00:02:34,000 --> 00:02:40,100
يحدد الترتيب والتقسيم ما نسميه بالنافذة.

33
00:02:40,200 --> 00:02:46,200
أي المجموعة الفرعية المرتبة من البيانات
التي يتم إجراء كل هذه الحسابات عليها.

